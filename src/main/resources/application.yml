server:
  port: 8090
spring:
  application:
    name: loans
# Configuracion de la base de datos    
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
# Configuracion de JPA      
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
# Estableciendo el perfil    
  profiles:
    active:
    - "prod"
# Configuracion de conexion al configserver    
  config:
    import:
    - "optional:configserver:http://localhost:8071/"
# Configuracion de actuator    
management:
  endpoints:
    web:
      exposure:
        include:
        - health
        - info
        - shutdown
        - metrics
        - prometheus
# Activando la comprobacion de estado del microservicio        
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true        
## permite acceder al endpoint /actuator/shutdown desde cualquier origen sin autenticación
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true      
## Agrega automáticamente al endpoint /actuator/info todas las variables de entorno disponibles
  info:
    env:
      enabled: true
## Agregar una etiqueta (tag) personalizada a todas las métricas que genera Actuator en micrometer llamado application como valor el nombre del microservicio
  metrics:
    tags:
      application: ${spring.application.name}
#Configuracion eureka
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
#Configuracion informacion mostrada en el endpoint de actuator /actuator/info
info:
  app:
    name: "loans"
    description: "EazyBank Loans Application"
    version: "1.0.0"
#Estableciendo la configuracion de logging DEBUG en el paquete com.eazybites.loans del proyecto
logging:
  level:
    com:
      eazybites:
        loans: DEBUG
# Estableciendo un patron de log personalizado para el microservicio
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"            